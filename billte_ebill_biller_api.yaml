openapi: 3.0.1
info:
  title: Billte eBill SWP API
  description: |
    The application programming interface for software partners (Software Partner API) allows communication with an eBill Network Partner.
    The eBill service comprises of electronic bills, reminders, credit notes and advices which are summarized under the term "business case". Business cases are delivered from software partners via network partners to the SIX eBill infrastructure and can be received online by bill recipients.

    Documentation and Open API licence of the Software Partner API can be found on https://ebill-swp.org

    Examples and extra information - https://github.com/billte-engineering/ebill-swp-redoc.

    Examples include:

    * submitting an invoice
    * submitting a reminder
    * submitting an installment
    * submitting payableAmount





    ### General Note

    These APIs are based on the work of the Working Group eBill-SWP-API. Billte is a member of the group and an active contributor.

    This documentation has been compiled with the greatest care, but may nevertheless contain errors or inaccuracies. Working Group eBill-SWP-API cannot assume any legal responsibility or any liability for erroneous information or its consequences.

    If you notice any errors in this documentation or have any suggestions for improvements, we would be grateful to receive your feedback; please open an issue on our website : https://github.com/billte-engineering/ebill-swp-redoc.
    ### Environments
    + #### Production environment [code:P] <br> `baseUrl` : https://guard-api.ebill.billte.ch
    + #### Stable staging environment [code:XP] <br> `baseUrl` : https://guard-api-xp.ebill.billte.ch
    + #### Unstable staging environment [code:XE] <br> `baseUrl` : https://guard-api-xe.ebill.billte.ch
  contact:
    name: Software Partner API
    url: https://guard-api.ebill.billte.ch
  version: 1.0.0
servers:
- url: https://guard-api.ebill.billte.ch/swp/v1
tags:
- name: Billers
  description: "All operations that are associated with a biller are located within\
    \ the biller resource, including the creation of business cases."
- name: Events
  description: |
    **Notification Events**
    The event resource allows the software partner to retrieve changes for the event type 'Subscription status changes'.
- name: Sectors
  description: |
    **Industry Sector**
    Industry sectors are valid system wide. Each biller will reference one or several industry sectors.
- name: Healthcheck
  description: |
    **System Healthcheck**
    This allows to check the basic state of the system (can it be reached, does authentication and auhorization work, does it respond). As some infrastructures block certain HTTP methods by default, the healthcheck allows to test if all required methods (GET, POST) work across all layers.
paths:
  /billers/authenticate:
    post:
      tags:
      - Billers
      summary: Authenticate Biller
      description: |
        Returns an authentication token for the biller to be used in other APIs.
      operationId: getAuthenticationTokenForBiller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillerAuthenticationRequest'
        required: true
      responses:
        "200":
          description: Biller Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillerAuthenticationResponse'
        default:
          description: |
            See section Error Handling of the Software Partner API documentation
            for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillerAuthenticationError'
      x-codegen-request-body-name: body
  /billers/bill-recipient/search:
    post:
      tags:
      - Billers
      summary: Search for bill recipients for this biller
      description: |
        Returns a list of one or more bill recipients.

        The response will only list a bill recipient if he allows bills in his online banking to be posted by the biller or allows bills to be posted in general. It will always return the billRecipientId and optionally any other provided parameter.

        The call will return an empty list if no matching bill recipient is
        found or the biller is not allowed to send bills to the bill recipient.

        ### Note:
        - This endpoint accepts either a JSON array of objects (preferred) or a single JSON object.
      operationId: searchBillRecipientsForBiller
      parameters:
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      requestBody:
        description: "Parameters for the search, at least one of the parameters is\
          \ required in addition to the mandatory \"billerPid\". It is recommended\
          \ to use \"billRecipientId\" since it is a permenant id of each recipient\
          \ in the SIX infrastructure."
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BillRecipientsForBillerSearchRequestArray'
                - $ref: '#/components/schemas/BillRecipientsForBillerSearchRequest'
        required: true
      responses:
        "200":
          description: Bill recipients found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BillRecipientsForBillerSearchResponse'
                  - $ref: '#/components/schemas/BillRecipientsForBillerSearchResponseItem'
        default:
          description: |
            See section Error Handling of the Software Partner API documentation
            for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-codegen-request-body-name: body
  /billers/business-cases:
    get:
      tags:
      - Billers
      summary: Get Business Case
      description: |
        Depending on the accept header, this operation either returns a JSON business case object or the original PDF.
        The returned JSON object contains one of the business case subtypes -
        Bill, InstalmentBill, Reminder, CreditNote or Advice.
      operationId: getBusinessCase
      parameters:
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      - name: billerPid
        in: query
        description: |
          biller PID
          **Maximal length**: '17'
          **Example**: '"41NN00BBBBBBBBBPP"'
          **Pattern**: '41[0-9]{15}'
        required: true
        schema:
          maxLength: 17
          pattern: "41[0-9]{15}"
          type: string
      - name: businessCaseId
        in: query
        description: |
          business case id
          **Maximal length**: '39'
          **Example**: '"BCID0FB909852BBC4D06AD8336AAE87D7FC9"'
          **Pattern**: 'BCID[0-9A-Z]{32}'
        required: true
        schema:
          maxLength: 39
          pattern: "BCID[0-9A-Z]{32}"
          type: string
      responses:
        "200":
          description: Business case found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCase'
        default:
          description: |
            See section Error Handling of the Software Partner API documentation
            for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
      - Billers
      summary: Create business case
      description: |
        The creation of a business case in PDF/A-3b format works with a simple
        POST request where the PDF is the binary payload of the request. Note
        that only one PDF can be submitted at a time.

        Validation of the submitted data will take place immediately and the
        response either confirms the successful creation of the business case on
        the NWP or contains the error details of the validation.
      operationId: createBusinessCase
      parameters:
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      requestBody:
        description: Request body for the creation of business case. Required objects
          depend on type of business case.
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/CreateBusinessCaseRequest'
        required: true
      responses:
        "200":
          description: Business case created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCase'
        default:
          description: |
            See section Error Handling of the Software Partner API documentation
            for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-codegen-request-body-name: body
  /events/bill-recipient-email-address-changed:
    get:
      tags:
      - Events
      summary: Find events for bill recipients email address changes
      description: |
        This event is triggered after any billerPid registered with the requesting SWP has submitted a business case with an outdated, so called historically available email address. It notifies about the changed email address of a bill recipient, which has been adjusted in eBill.
        An email address is considered to be historically available if it was present up to 15 months prior to the submission time.
        The billers are able to submit business cases with historically available email addresses of a bill recipient. However, latest 15 months after the email address changed, the billers are required to submit the business cases with the currently valid email address of the bill
        recipient.
      operationId: findBillRecipientEmailAddressChangedEvent
      parameters:
      - name: lastEventId
        in: query
        description: |
          Id of the last received event. If omitted, the result starts with the oldest available event.
          **Example**: '"EVID82A65938766547EBBBA39BA6F7B07F24"'
          **Maximal length**: '39'
          **Pattern**: '"EVID[0-9A-Z]{32}"'
        schema:
          maxLength: 39
          pattern: "EVID[0-9A-Z]{32}"
          type: string
      - name: limit
        in: query
        description: |
          Maximum number of events one wants to receive (technical maximum is 1000, no more will be returned at once and you have to fetch again to check if there are more)
        schema:
          maximum: 1000
          type: integer
          default: 100
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Bill recipient email address changed events found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillRecipientEmailAddressChangedEbillGuardianEvent'
        default:
          description: |
            See section Error Handling of the Network Partner API documentation for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  /events/bill-recipient-subscription-status-changed:
    get:
      tags:
      - Events
      summary: Find events for bill recipient subscriptions which changed status
      description: |
        Events for status changes on bill recipient subscriptions to any billerPid registered with the requesting SWP, regardless if subscriptions have been done without registration form (event from infrastructure) or with registration form (no event from infrastructure).
      operationId: findBillRecipientSubscriptionStatusChangedEvents
      parameters:
      - name: lastEventId
        in: query
        description: |
          Id of the last received event. If omitted, the result starts with the oldest available event.
          **Example**: '"EVID82A65938766547EBBBA39BA6F7B07F24"'
          **Maximal length**: '39'
          **Pattern**: '"EVID[0-9A-Z]{32}"'
        schema:
          maxLength: 39
          pattern: "EVID[0-9A-Z]{32}"
          type: string
      - name: limit
        in: query
        description: |
          Maximum number of events one wants to receive (technical maximum is 1000, no more will be returned at once and you have to fetch again to check if there are more)
        schema:
          maximum: 1000
          type: integer
          default: 100
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Bill recipient subscription changed events found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillRecipientSubscriptionStatusChangedEbillGuardianEvent'
        default:
          description: |
            See section Error Handling of the Software Partner API documentation for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  /events/business-case-status-changed:
    get:
      tags:
      - Events
      summary: Find events for business cases which changed status
      description: |
        Events for status changes of bills, advices, credit notes and reminders
        which belong to any billerPid registered with the requesting SWP.
      operationId: findBusinessCaseStatusChangedEvents
      parameters:
      - name: lastEventId
        in: query
        description: |
          Id of the last received event. If omitted, the result starts with the oldest available event.
          **Example**: '"EVID82A65938766547EBBBA39BA6F7B07F24"'
          **Maximal length**: '39'
          **Pattern**: '"EVID[0-9A-Z]{32}"'
        schema:
          maxLength: 39
          pattern: "EVID[0-9A-Z]{32}"
          type: string
      - name: limit
        in: query
        description: |
          Maximum number of events one wants to receive (technical maximum is 1000, no more will be returned at once and you have to fetch again to check if there are more)
        schema:
          maximum: 1000
          type: integer
          default: 100
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Business case status changed events found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCaseStatusChangedEbillGuardianEvent'
        default:
          description: |
            See section Error Handling of the Network Partner API documentation
            for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  /events/instalment-status-changed:
    get:
      tags:
      - Events
      summary: Find events for instalments which changed status
      description: |
        Events for status changes of instalment bills only which belong to any
        billerPid registered with the requesting SWP.
      operationId: findInstalmentStatusChangedEvents
      parameters:
      - name: lastEventId
        in: query
        description: |
          Id of the last received event. If omitted, the result starts with the oldest available event.
          **Example**: '"EVID82A65938766547EBBBA39BA6F7B07F24"'
          **Maximal length**: '39'
          **Pattern**: '"EVID[0-9A-Z]{32}"'
        schema:
          maxLength: 39
          pattern: "EVID[0-9A-Z]{32}"
          type: string
      - name: limit
        in: query
        description: |
          Maximum number of events one wants to receive (technical maximum is 1000, no more will be returned at once and you have to fetch again to check if there are more)
        schema:
          maximum: 1000
          type: integer
          default: 100
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Instalment status changed events found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstalmentStatusChangedEbillGuardianEvent'
        default:
          description: |
            See section Error Handling of the Network Partner API documentation
            for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  /healthcheck:
    get:
      tags:
      - Healthcheck
      summary: Health check using GET method
      description: Returns a status message of the system.
      operationId: healthCheckForGet
      parameters:
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Healthcheck successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        default:
          description: |
            See section Error Handling of the Software Partner API documentation for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
      - Healthcheck
      summary: Health check using POST method
      description: Returns the request body. This operation will not modify the system.
      operationId: healthCheckForPost
      parameters:
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      requestBody:
        description: Any message which is expected in the response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthCheckRequest'
        required: true
      responses:
        "200":
          description: Healthcheck successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        default:
          description: |
            See section Error Handling of the Software Partner API documentation for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-codegen-request-body-name: body
  /sectors:
    get:
      tags:
      - Sectors
      summary: Find Sectors
      description: Get the industry sector list of the eBill infrastructure. The sectors
        are more or less static and can therefore be cached.
      operationId: findSectors
      parameters:
      - name: Authorization
        in: header
        description: |
          Access-Token with the prefix "Bearer".
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Sectors found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sector'
        default:
          description: See section Error Handling of the Network Partner API documentation
            for further details about errors and error handling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    AccountAndReference:
      title: AccountAndReference
      type: object
      properties:
        esr:
          $ref: '#/components/schemas/Esr'
        generic:
          $ref: '#/components/schemas/Generic'
    Address:
      required:
      - city
      - countryCode
      - postalCode
      - street
      type: object
      properties:
        buildingNumber:
          maxLength: 16
          minLength: 1
          type: string
          description: Building number
          example: 20a
        city:
          maxLength: 35
          minLength: 1
          type: string
          description: City
          example: Neudorf
        countryCode:
          maxLength: 2
          pattern: "[A-Z]{2}"
          type: string
          description: Country; two-letter ISO country code according to ISO 3166-1.
          example: CH
        postalCode:
          maxLength: 9
          minLength: 1
          type: string
          description: Postal code
          example: "6025"
        street:
          maxLength: 70
          minLength: 1
          type: string
          description: Street
          example: Soodmattenstrasse
    AmountValue:
      type: number
      description: |
        The amount value. Take care when using JavaScript libraries to parse this value - it should be treated as a financial amount and therefore not as a floating point number but rather using a precise decimal representation (like BigDecimal in Java).
        **Maximum value**: '99'999'999.99'
        **Maximal length**: '10'
      example: 99.99
    ApprovalAmountWithCurrency:
      required:
      - currencyCode
      - value
      type: object
      properties:
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        value:
          $ref: '#/components/schemas/AmountValue'
      description: |
        Amount provided by status changed events if the new status is APPROVED. The value is always greater than zero.
    ApprovedAmount:
      title: ApprovedAmount
      type: object
      properties:
        currencyCode:
          type: string
        value:
          type: number
          format: double
    BillRecipientForEvent:
      required:
      - address
      - billRecipientId
      - correspondenceLanguage
      - name
      - type
      type: object
      properties:
        emailAddress:
          maxLength: 256
          minLength: 1
          type: string
          description: Email address of the bill recipient
          example: peter@muster.ch
        billRecipientId:
          maxLength: 17
          minLength: 1
          pattern: "^([0-9])*$"
          type: string
          description: ID of the bill recipient
          example: "41010560425610173"
        enterpriseIdentificationNumber:
          maxLength: 12
          pattern: "^CHE[0-9]{9}$"
          type: string
          description: "Swiss enterprise identification number (UID) without dashes,\
            \ dots, or extension"
          example: CHE123456789
        type:
          type: string
          description: The type of the bill recipient
          enum:
          - PRIVATE
          - COMPANY
        name:
          maxLength: 70
          minLength: 1
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFDCF\\uFDF0-\\uFFFD]*"
          type: string
          description: "Last name if private bill recipient, company name if company\
            \ bill recipient"
          example: "for private bill recipient: Muster, for company name: Muster AG"
        firstName:
          maxLength: 35
          pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
            uE000-\\uFDCF\\uFDF0-\\uFFFD]*"
          type: string
          description: "First name if private bill recipient, empty if company bill\
            \ recipient"
          example: Peter
        correspondenceLanguage:
          maxLength: 3
          minLength: 1
          type: string
          description: Language for correspondence with this bill recipient (ISO-639-2/B)
          example: ger
        address:
          required:
          - city
          - countryCode
          - postalCode
          - streetName
          type: object
          properties:
            streetName:
              maxLength: 70
              minLength: 1
              pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
                uE000-\\uFDCF\\uFDF0-\\uFFFD]*"
              type: string
              description: Street name
              example: Neustadtstrasse
            postalCode:
              maxLength: 9
              minLength: 1
              pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
                uE000-\\uFDCF\\uFDF0-\\uFFFD]*"
              type: string
              description: Postal code
              example: "6025"
            city:
              maxLength: 35
              minLength: 1
              pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\\
                uE000-\\uFDCF\\uFDF0-\\uFFFD]*"
              type: string
              description: City name
              example: Neudorf
            countryCode:
              maxLength: 2
              pattern: "^[A-Z]{2}$"
              type: string
              description: Country code (ISO 3166-1 alpha 2)
              example: CH
          description: RecipientAddress details
    BillRecipient:
      required:
      - billRecipientId
      - name
      type: object
      properties:
        address:
          $ref: '#/components/schemas/BillRecipientAddress'
        billRecipientId:
          maxLength: 17
          minLength: 1
          pattern: "([0-9])*"
          type: string
          description: Unique identifier of the invoice recipient (also known as "PID").
            In some cases (look-up functionality activated by the recipient) it is
            possible to use the email address (see emailAddress) instead of the billRecipientId.
            <b>Example:</b> 41010560425610173
        emailAddress:
          maxLength: 256
          minLength: 1
          type: string
          description: "Email address of the invoice recipient. Email address is valid\
            \ if it is specified in the current master data of the infrastructure\
            \ and, in case it is marked as \"historic\", it has not been marked as\
            \ \"historic\" for more than 15 months. <b>Example:</b> peter@muster.ch"
          format: email
        enterpriseIdentificationNumber:
          maxLength: 12
          pattern: "CHE[0-9]{9}"
          type: string
          description: |
            Enterprise Identification Number (UID) for companies as invoice recipients (in the context eBill for Business). UID is valid, if it is specified in the current master data of the infrastructure.
          example: CHE123456789
        name:
          maxLength: 70
          minLength: 1
          type: string
          description: First and last name of the invoice recipient. Alternatively
            company name.
          example: "for private bill recipient: Muster, for company name: Muster AG"
        firstName:
          maxLength: 70
          type: string
          description: "first name, if private bill recipient empty, if company bill\
            \ recipient"
          example: Peter
        type:
          type: string
          description: the type of the bill recipient
          enum:
          - PRIVATE
          - COMPANY
    BillRecipientAddress:
      type: object
      properties:
        structuredAddress:
          $ref: '#/components/schemas/Address'
        unstructuredAddress:
          $ref: '#/components/schemas/UnstructuredAddressType'
    UnstructuredAddressType:
      required:
      - addressLine1
      - addressLine2
      - countryCode
      type: object
      properties:
        addressLine1:
          type: string
          description: Unstructured address line 1
        addressLine2:
          type: string
          description: Unstructured address line 2
        countryCode:
          type: string
          description: Country; two-letter ISO country code according to ISO 3166-1.
    BillRecipientEmailAddressChangedEbillGuardianEvent:
      required:
      - billerPid
      - events
      type: object
      properties:
        billerPid:
            maxLength: 17
            pattern: "41[0-9]{15}"
            type: string
            description: biller PID
            example: "41100012345678901"
        events:
          type: array
          items:
            $ref: "#/components/schemas/BillRecipientEmailAddressChangedEvent"
    BillRecipientEmailAddressChangedEvent:
      description: An Event describing the change of the email address of a bill recipient.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - oldEmailAddress
        - newEmailAddress
        - triggeredBy
        properties:
          newEmailAddress:
            maxLength: 256
            minLength: 1
            type: string
            description: the new email address of the bill recipient
            format: email
            example: peter_new@muster.ch
          oldEmailAddress:
            maxLength: 256
            minLength: 1
            type: string
            description: the old email address of the bill recipient which has been
              used in the submission of a business case
            format: email
            example: peter@muster.ch
          triggeredBy:
            required:
            - billerPid
            - businessCaseId
            type: object
            properties:
              billerPid:
                maxLength: 17
                pattern: "41[0-9]{15}"
                type: string
                description: biller PID
                example: "41100012345678901"
              businessCaseId:
                maxLength: 39
                pattern: "BCID[0-9A-Z]{32}"
                type: string
                description: business case id
                example: BCID0FB909852BBC4D06AD8336AAE87D7FC9
    BillRecipientSubscription:
      required:
      - billRecipient
      type: object
      properties:
        accountNumber:
          maxLength: 21
          type: string
          description: |
            Account number of the biller (e.g. iban), if provided from the financial institution
        billRecipient:
          $ref: '#/components/schemas/BillRecipientForEvent'
        billerPid:
          maxLength: 17
          pattern: "41[0-9]{15}"
          type: string
          description: biller PID
          example: "41100012345678901"
        referenceStructured:
          maxLength: 27
          pattern: "([a-zA-Z0-9])*"
          type: string
          description: |
            ESR or QR or creditor reference number, if provided from the financial institution.
          example: "123456123456789012345678901"
    BillRecipientSubscriptionForm:
      type: object
      description: 'Contains additional information regarding a bill recipient subscription. It contains the users input to the BillerSubscriptionForm.'
      properties:
        billRecipientSubscriptionFormFields:
          type: array
          items:
            type: object
            required:
              - technicalId
              - value
            properties:
              technicalId:
                type: string
                minLength: 1
                maxLength: 35
                description: 'The identifying token of this subscription form field. Corresponds to the property technicalId of BillerSubscriptionFormField.'
                example: 'customerNumber'
              value:
                type: string
                minLength: 1
                maxLength: 256
                description: 'The value of this subscription form field as entered by the user. If a pattern is defined, it has been checked against it.'
    BillRecipientSubscriptionFormField:
      title: BillRecipientSubscriptionFormField
      type: object
      properties:
        technicalId:
          type: string
        value:
          type: string
    BillRecipientSubscriptionStatusChangedEbillGuardianEvent:
      required:
      - billerPid
      - events
      type: object
      properties:
        billerPid:
            maxLength: 17
            pattern: "41[0-9]{15}"
            type: string
            description: biller PID
            example: "41100012345678901"
        events:
          type: array
          items:
            $ref: "#/components/schemas/BillRecipientSubscriptionStatusChangedEvent"
    BillRecipientSubscriptionStatusChangedEvent:
      description: |
        An Event describing the status change of a bill recipient subscription.
        Additional properties may be filled according the user input on the biller\'s registration form.
      allOf:
      - $ref: '#/components/schemas/Event'
      - $ref: '#/components/schemas/BillRecipientSubscription'
      - $ref: '#/components/schemas/BillRecipientSubscriptionForm'
      - type: object
        properties:
          newStatus:
            type: string
            description: |
              The new status of the bill recipient subscription, currently only
              REQUESTED and INACTIVE are used, see <<Subscriptions and
              Subscription Cancellations>> for further information.
            enum:
            - INACTIVE
            - REQUESTED
            - ACTIVE
          allowedEbillDebitSubmissions:
            type: array
            description: 'Defines what kind of eBill Direct Debit submissions are allowed.'
            items:
              $ref: '#/components/schemas/AllowedEbillDebitSubmission'
        additionalProperties: true
    BillRecipientsForBillerSearchRequestArray:
      required:
      - billerPid
      - items
      type: object
      properties:
        billerPid:
          maxLength: 17
          minLength: 17
          pattern: "([0=9])*"
          type: string
          description: Biller PiD provided by the system
          example: 41NN00BBBBBBBBBPP
        items:
          type: array
          description: Array of bill recipient search requests
          items:
            type: object
            properties:
              billRecipientId:
                type: string
                description: ID of the bill recipient
                example: "41010560425610173"
                maxLength: 17
                minLength: 1
                pattern: "([0-9])*"
              emailAddress:
                type: string
                description: Email address of the bill recipient
                example: "peter@muster.ch"
                maxLength: 256
                minLength: 1
                format: email
              enterpriseIdentificationNumber:
                type: string
                description: |
                  Swiss enterprise identification number (UID) without dashes, dots, or extensions.
                  This should contain the Swiss enterprise identification number (UID) from the commercial register (Handelsregister),
                  which may be different from the VAT UID (Mehrwertsteuer UID).
                example: "CHE123456789"
                maxLength: 12
                pattern: "CHE[0-9]{9}"
    BillRecipientsForBillerSearchRequest:
      required:
      - billerPid
      type: object
      properties:
        billRecipientId:
          maxLength: 17
          minLength: 1
          pattern: "([0-9])*"
          type: string
          description: id of the bill recipient
          example: "41010560425610173"
        billerPid:
          maxLength: 17
          minLength: 17
          pattern: "([0=9])*"
          type: string
          description: Biller PiD provided by the system
          example: 41NN00BBBBBBBBBPP
        emailAddress:
          maxLength: 256
          minLength: 1
          type: string
          description: email address of the bill recipient
          format: email
          example: peter@muster.ch
        enterpriseIdentificationNumber:
          maxLength: 12
          pattern: "CHE[0-9]{9}"
          type: string
          description: |
            Swiss enterprise identification number (UID) without dashes, dots or extension.
            Note that this has to contain the swiss enterprise identification number (UID) from the commercial register (Handelsregister) which may be different from the VAT UID (Mehrwertsteuer UID).
          example: CHE123456789
    BillRecipientsForBillerSearchResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/BillRecipientsForBillerSearchResponseItem'
          minItems: 1
          maxItems: 100
        billerPid:
          maxLength: 17
          pattern: "41[0-9]{15}"
          type: string
          description: biller PID
          example: "41100012345678901"
    BillRecipientsForBillerSearchResponseItem:
      allOf:
        - $ref: '#/components/schemas/BillRecipientIdentification'
        - type: object
          required:
            - ebillSubmissionStatus
            - ebillDebitProposalStatus
          properties:
            ebillSubmissionStatus:
              type: string
              description: 'Defines if the biller can submit a business-case for the provided bill recipient identification in the request (=ALLOWED) or if the bill recipient identification is either not known to the eBill infrastructure or the submission is not allowed (=NOT_ALLOWED).'
              enum:
                - ALLOWED
                - NOT_ALLOWED
            ebillDebitProposalStatus:
              type: string
              description: 'Defines if the biller can submit an eBill Direct Debit proposal for the provided bill recipient id in the request (=ALLOWED) or if the bill recipient is either not known to the eBill infrastructure or the submission of an eBill Direct Debit proposal is not allowed (=NOT_ALLOWED).'
              enum:
                - ALLOWED
                - NOT_ALLOWED
            allowedEbillDebitSubmissions:
              type: array
              description: 'Defines what kind of eBill Direct Debit submissions are allowed.'
              items:
                $ref: '#/components/schemas/AllowedEbillDebitSubmission'
    BillRecipientIdentification:
      type: object
      description: 'Exactly one property must be set.'
      properties:
        emailAddress:
          type: string
          description: 'email address of the bill recipient'
          example: 'peter@muster.ch'
          minLength: 1
          maxLength: 256
          format: email
        billRecipientId:
          type: string
          description: 'id of the bill recipient'
          example: '41010560425610173'
          minLength: 1
          maxLength: 17
          pattern: '([0-9])*'
        enterpriseIdentificationNumber:
          type: string
          description: |
            Swiss enterprise identification number (UID) without dashes, dots or extension.
            Note that this has to contain the swiss enterprise identification number (UID) from the commercial register (Handelsregister) which may be different from the VAT UID (Mehrwertsteuer UID).
          maxLength: 12
          pattern: 'CHE[0-9]{9}'
          example: 'CHE123456789'
    AllowedEbillDebitSubmission:
      description: 'Defines the relevant information what type of eBill Direct Debit submission the biller is allowed to do.'
      type: object
      required:
        - currencyCode
        - chargebackMode
      properties:
        currencyCode:
          $ref: '#/components/schemas/EbillDebitCurrenyCode'
        chargebackMode:
          $ref: '#/components/schemas/ChargebackMode'
    EbillDebitProposal:
      description: 'eBill Direct Debit proposal for the bill recipient.'
      type: object
      required:
        - billRecipientIdentification
        - currencyCode
        - chargebackMode
      properties:
        id:
          type: string
          minLength: 36
          maxLength: 36
          description: 'A unique id for this eBill Direct Debit proposal. Property must not be given when creating a new object.'
        billRecipientIdentification:
          $ref: '#/components/schemas/BillRecipientIdentification'
        currencyCode:
          $ref: '#/components/schemas/EbillDebitCurrenyCode'
        chargebackMode:
          $ref: '#/components/schemas/ChargebackMode'
    ChargebackMode:
      type: string
      description: 'If supported, the bill recipient can initiate a chargeback of the corresponding payment.'
      enum:
        - SUPPORTED
        - NOT_SUPPORTED
    EbillDebitCurrenyCode:
      description: |
        The amount currency code according to ISO-4217 used for eBill Direct Debit.
      type: string
      example: 'CHF'
      maxLength: 3
      pattern: 'CHF|EUR'
    AccountNumber:
      type: object
      description: |
        For the account number, either IBAN or ESR participant number has to be specified (not both).
      properties:
        esrParticipantNumber:
          type: string
          description: |
            ESR participant number, format according to the specifications:

            - numerical value with mandatory 9 digits long (unhyphenated)

            - structure: VV999999P
            - VV = preceding digits, either 01 or 03

            - 999999: reference number

              where a reference number is only 6 digits long, additional zeros must be inserted on the left hand side

              reference number should be greater than 000000

            - P: check digit in accordance with Modulo 10, recursive

          maxLength: 9
          example: '010001628'
          pattern: '[0-9]{9}'
        iban:
          type: string
          description: |
            credit account

            - The requirements for IBAN usage are limited to the country codes CH and LI, otherwise the business case will be rejected.

            - The IBAN should match an already existing credit account of the biller, otherwise the business case will be rejected.

            - See also ISO-13616-1

          maxLength: 21
          example: 'CH100023000A109822346'
          pattern: '(CH|LI)\d{7}[0-9A-Z]{12}'
    Biller:
      title: Biller
      required:
      - billerPid
      - legalName
      - postalAddress
      type: object
      properties:
        billerPid:
          maxLength: 17
          pattern: "41[0-9]{15}"
          type: string
          description: biller PID
          example: "41100012345678901"
        legalName:
          type: string
          description: Legal name of the invoice issuer. This name is also displayed
            in the invoice overview in the eBill customer portal.
          example: legalName
        postalAddress:
          $ref: '#/components/schemas/PostalAddress'
        allowedToSubmitDonationInquiries:
          type: boolean
          default: false
          description: 'States whether the biller is allowed to submit donation inquiries. Only billers that have been verified to be non-profit organisations (NPO) may be granted this permission.'
    BillerAuthenticationError:
      required:
      - billerPid
      - error
      - errorCode
      - type
      type: object
      properties:
        billerPid:
          maxLength: 17
          minLength: 17
          pattern: "([0=9])*"
          type: string
          description: Biller PiD provided by the system
          example: 41NN00BBBBBBBBBPP
        error:
          maxLength: 300
          minLength: 1
          type: string
          description: Cause for not issuing token
          example: Biller not found!
        errorCode:
          type: number
          description: Error code for the error
          example: 404.0
        type:
          maxLength: 10
          minLength: 1
          type: string
          description: User Type
          example: BILLER
    BillerAuthenticationRequest:
      required:
      - billerPid
      - billerSecret
      type: object
      properties:
        billerPid:
          maxLength: 17
          minLength: 17
          pattern: "([0=9])*"
          type: string
          description: Biller PiD provided by the system
          example: 41NN00BBBBBBBBBPP
        billerSecret:
          maxLength: 36
          minLength: 36
          type: string
          description: Biller secret key provided by the system
          example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    BillerAuthenticationResponse:
      required:
      - billerPid
      - expiresIn
      - token
      - type
      type: object
      properties:
        billerPid:
          maxLength: 17
          minLength: 17
          pattern: "([0=9])*"
          type: string
          description: Biller PiD provided by the system
          example: 41NN00BBBBBBBBBPP
        expiresIn:
          type: number
          description: Expiration Time for access token in milliseconds
          example: 3600.0
        token:
          maxLength: 300
          minLength: 1
          type: string
          description: Access Token
          example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx...
        type:
          maxLength: 10
          minLength: 1
          type: string
          description: User Type
          example: BILLER
    BusinessCase:
      required:
      - id
      - status
      type: object
      properties:
        type:
          type: string
          description: |
            the type of the business case
          enum:
          - NWP_PENDING
          - OPEN
          - APPROVED
          - REJECTED
          - COMPLETED
        businessCaseDate:
          type: string
          description: |
            The business case date (ISO-8601 format), can not be more than 90 days in the past on the date it was created. Cannot be in the future
          example: 2023-12-22
        id:
          maxLength: 39
          pattern: "BCID[0-9A-Z]{32}"
          type: string
          description: |
            A unique id for this business case on the NWP. Property must not be given when creating a new business case.
          example: BCID0FB909852BBC4D06AD8336AAE87D7FC9
        status:
          type: string
          description: the status of the business case
          enum:
          - NWP_PENDING
          - OPEN
          - APPROVED
          - REJECTED
          - COMPLETED
        referenceNumber:
          type: string
          description: A business case reference given by the biller. Must be unique
            in combination with the billerId.
          example: 2018-123456-22
        totalAmount:
          $ref: '#/components/schemas/TotalAmount'
        billerPid:
          type: string
          description: |
            Biller PID
          example: "41010560425610173"
      description: the business case object on the NWP
    BusinessCaseId:
      required:
      - id
      type: object
      properties:
        id:
          maxLength: 39
          pattern: "BCID[0-9A-Z]{32}"
          type: string
          description: |
            A unique id for business cases on the NWP. Property must not be given when creating a new business case.
          example: BCID0FB909852BBC4D06AD8336AAE87D7FC9
    BusinessCaseStatusChangedEbillGuardianEvent:
      required:
      - billerPid
      - events
      type: object
      properties:
        billerPid:
            maxLength: 17
            pattern: "41[0-9]{15}"
            type: string
            description: biller PID
            example: "41100012345678901"
        events:
          type: array
          items:
            $ref: "#/components/schemas/BusinessCaseStatusChangedEvent"
    BusinessCaseStatusChangedEvent:
      description: "An Event describing the status change of a business case. These\
        \ events are sent for bills, reminders, advices and credit notes. The approved\
        \ amount is only provided for the status `APPROVED`."
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        properties:
          approvedAmount:
            $ref: '#/components/schemas/ApprovalAmountWithCurrency'
          businessCaseId:
            maxLength: 39
            pattern: "BCID[0-9A-Z]{32}"
            type: string
            description: business case id
            example: BCID0FB909852BBC4D06AD8336AAE87D7FC9
          newStatus:
            type: string
            description: the new status of the business case
            enum:
            - NWP_PENDING
            - OPEN
            - APPROVED
            - REJECTED
            - COMPLETED
          externalDonationPurposeId:
            type: string
            description: 'optional field only to be used for donation inquiries to represent a potential selection of a donation purpose by the bill recipient, note the connection to the field externalDonationPurposeId from eBill business case specification'
    BusinessCaseType:
      type: string
      enum:
      - Bill
      - Reminder
      - CreditNote
      - Advice
      - InstalmentBill
      - DonationInquiry
    CreateBusinessCaseRequest:
      title: CreateBusinessCaseRequest
      required:
      - billRecipient
      - biller
      - businessCaseDate
      - businessCaseType
      - content
      - fileIdentifier
      - totalAmount
      type: object
      properties:
        billRecipient:
          $ref: '#/components/schemas/BillRecipient'
        biller:
          $ref: '#/components/schemas/Biller'
        businessCaseDate:
          type: string
          description: "Date of the business case in TZ format.</br> At time of submission,\
            \ cannot be older than `90` days. </br> At time of submission, cannot\
            \ be in the future. <b>Example: </b>'2022-11-29T09:53:31.814795Z'"
          example: 2022-11-29T09:53:31.814795Z
        businessCaseType:
          $ref: '#/components/schemas/BusinessCaseType'
        content:
          type: string
          description: Business Case PDF file encoded in base64 String
          example: PDF encoded in base64 String
        fileIdentifier:
          type: string
          description: "Name for the Business Case PDF file.<br> <b>Example:</b> \"\
            invoice-123456789\", For a PDF document \"invoice-123456789.pdf\""
          example: testInvoice
        paymentsByInstalments:
          type: array
          description: "Possibility to offer payment of the invoice in instalments.\
            \ </br> Instalment invoices can be submitted as <b>multi-group-invoices</b>\
            \ or <b>single-group-invoices</b>.</br></br> <b>Multi-Groups</b> -  Invoices\
            \ with several instalment groups to choose from. </br> The invoice recipient\
            \ can decide with which instalment option the invoice will be paid. One\
            \ of the instalments groups can contain a total instalment to be used\
            \ for the payment of the entire invoice (isTotalPaymentOption, can only\
            \ be set to `true` in one instalment group).</br></br> <b>Single-groups</b>\
            \ - Invoice with only one instalment group.</br> The invoice recipient\
            \ can only pay with this instalment option"
          items:
            $ref: '#/components/schemas/PaymentByInstalments'
        referenceNumber:
          type: string
          description: "Reference number of the referenced business case.</br> If\
            \ the referenced invoice is found, it will be substituted with the new\
            \ credit note, notification, or invoice.</br> In case of a reminder, the\
            \ referenced invoice will not be substituted; at time of approval, the\
            \ invoice recipient decides whether to pay the original invoice or the\
            \ reminder. </br> If the referenced invoice is not found, a new business\
            \ case is created."
          example: "101403020210803153141402094"
        referencedBill:
          $ref: '#/components/schemas/ReferenceBill'
        singlePayment:
          $ref: '#/components/schemas/SinglePayment'
        totalAmount:
          $ref: '#/components/schemas/TotalAmount'
        workflow:
          $ref: '#/components/schemas/WorkFlow'
        proposedDonationAmounts:
          $ref: '#/components/schemas/ProposedDonationAmounts'
          description: 'If proposed donation amounts are specified, the total and the payment information amount value must not be specified and vice versa. All amounts with a donationInquiry must be greater or equal to the minimum amount value specified for donation inquiries.'
        donationPurposes:
          $ref: '#/components/schemas/DonationPurposes'
          description: 'Optional list of donation purposes.'
    CurrencyCode:
      maxLength: 3
      pattern: "[A-Z]{3}"
      type: string
      description: |
        The amount currency code according to ISO-4217.
      example: CHF
    EbillResponse:
      title: EbillResponse
      type: object
      properties:
        billerId:
          type: string
          description: biller id of biller associated with invoice
          example: BID00012345
        businessCaseDate:
          type: string
          description: businessCaseDate of invoice
          example: 2021-01-15
        businessCaseId:
          type: string
        id:
          type: string
          description: id of business case
          example: BCID8FC1AE666B65449EAFEA65AD6473B9A3
        referenceBill:
          $ref: '#/components/schemas/ReferenceBill'
        referenceNumber:
          type: string
          description: referenceNumber of invoice
          example: Bill2021-01-15T07:20:49.047Z123
        status:
          type: string
          description: status of invoice
          example: OPEN
        totalAmount:
          $ref: '#/components/schemas/TotalAmount'
        type:
          type: string
          description: type of invoice
          example: Bill
    Esr:
      title: Esr
      required:
      - esrParticipantNumber
      - referenceStructured
      type: object
      properties:
        esrParticipantNumber:
          type: string
          description: "Credit account of the invoice issuer (ESR-participant number).\
            \ 9 characters, numeric value, unhyphenated. Composition- VV999999P -\
            \ VV = ESR code (01 for ESR in CHF or 03 for ESR in EUR) - 999999 = serial\
            \ number- if number has less than 6 digits, it must be filled with zeros\
            \ on the left side; must be bigger than 000000. - P = check digit according\
            \ to Modulus 10 recursive. Example: 010001628"
          example: "10001628"
        referenceStructured:
          type: string
          description: ESR reference number (including check digit)
          example: abc1234cefgh56
    Event:
      required:
      - eventId
      - timestamp
      type: object
      properties:
        eventId:
          maxLength: 39
          pattern: "EVID[0-9A-Z]{32}"
          type: string
          description: event id
          example: EVID82A65938766547EBBBA39BA6F7B07F24
        timestamp:
          type: string
          description: timestamp of the event
          format: date-time
          example: 2019-01-01T10:00:00Z
      description: contains common fields for all events
    EbillGuardianEvent:
      required:
      - billerPid
      - events
      type: object
      properties:
        billerPid:
            maxLength: 17
            pattern: "41[0-9]{15}"
            type: string
            description: biller PID
            example: "41100012345678901"
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
      description: contains common fields for all events
    Fre:
      title: Fre
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        displayName:
          type: string
        logo:
          $ref: '#/components/schemas/Logo'
        website:
          type: string
    Generic:
      title: Generic
      required:
      - iban
      - referenceType
      type: object
      properties:
        iban:
          type: string
          description: |-
            Credit account of the invoice issuer (IBAN or QR-IBAN). See also ISO13616-1.</br> The usage of IBAN or QR-IBAN is only permitted with country codes CH or LI and 21 alphanumeric characters.</br>
            Example: `CH9300762011623852957`,`LI21088100002324013AA` . </br>
            Must contain country code CH or LI, otherwise the business case will be denied.
            Must be matching with a credit account that is specified in the infrastructure in the master data of the invoice issuer, otherwise the business case will be denied.
          example: CH9300762011623852957
        referenceStructured:
          type: string
          description: "Reference number, structured payment reference. Note: the\
            \ reference is either a QR reference, creditor reference (ISO 11649) or\
            \ an IPI reference. QR Reference: 27 characters, numerical; check digit\
            \ computation with Modulus 10 recursive (27th position of the reference).\
            \ Creditor Reference (ISO 11649): up to 25 characters, alphanumeric. IPI\
            \ Reference: 20 characters, alphanumeric; check digit computation with\
            \ Modulus 97-10 (ISO 7064) (Note: the IPI receipt was eliminated by 31.03.2020)\
            \ When using QR-IBAN, this element must be filled with the QR Reference.\
            \ When using IBAN and referenceType SCOR, this element must be filled\
            \ with the Creditor Reference. When using IBAN and referenceType IPI,\
            \ this element must be filled with the IPI Reference. When using IBAN\
            \ and referenceType NON, this element is not permitted to be filled."
          example: abc1234cefgh56
        referenceType:
          type: string
          description: "Reference type of the structured reference. Following values\
            \ are permitted: QRR - QR Reference SCOR - Creditor Reference (ISO 11649)\
            \ NON - without reference IPI - IPI Reference (Note: the IPI receipt was\
            \ eliminated by 31.03.2020) When using the QR-IBAN, the code QRR must\
            \ be included. When using the IBAN, either the code SCOR, IPI or NON must\
            \ be included."
          example: NON
        referenceUnstructured:
          type: string
          description: Unstructured message
          example: Unstructured message
    Ger:
      title: Ger
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        displayName:
          type: string
        logo:
          $ref: '#/components/schemas/Logo'
        website:
          type: string
    HealthCheckRequest:
      required:
      - message
      type: object
      properties:
        message:
          maxLength: 100
          minLength: 1
          type: string
          description: expected response message from health check
          example: any String
    HealthCheckResponse:
      required:
      - apiVersion
      - applicationVersion
      - environmentStage
      - message
      - receivedHeaders
      - requestDateTime
      type: object
      properties:
        apiVersion:
          type: string
          description: the version of the software partner api
          example: 1.0.23
        applicationVersion:
          type: string
          description: the version of the server application at network partner
          example: 1.4.3.0-desire-20180927091004161-71-5e3ca91
        environmentStage:
          type: string
          description: the instance which the request was sent to
          example: XE
        message:
          maxLength: 100
          type: string
          description: response message from health check
          example: The healthcheck GET resp. POST request was successfully received
            and processed
        receivedHeaders:
          type: array
          items:
            type: object
            properties:
              headerName:
                type: string
                description: the name of the provided header
                example: X-CORRELATION-ID
              headerValue:
                type: string
                description: As received
                example: 9bcd4351-4b7b-4017-9b63-9613414c6ff1
        requestDateTime:
          type: string
          description: |
            according to RFC3339, section 5.6 in ISO 8601 with timezone and milliseconds
          format: date-time
          example: 2018-10-03T16:03:09.101+02:00
    Instalment:
      title: Instalment
      required:
      - externalInstalmentId
      - paymentInformation
      type: object
      properties:
        description:
          type: string
          description: Description of the instalment.
        externalInstalmentId:
          type: string
          description: Unique reference of the instalment. It is assigned by the invoice
            issuer and must be unique for the entire business case. This reference
            is used so that the invoice issuer knows exactly which instalment was
            approved or denied
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
    InstalmentStatusChangedEbillGuardianEvent:
      required:
      - billerPid
      - events
      type: object
      properties:
        billerPid:
            maxLength: 17
            pattern: "41[0-9]{15}"
            type: string
            description: biller PID
            example: "41100012345678901"
        events:
          type: array
          items:
            $ref: "#/components/schemas/InstalmentStatusChangedEvent"
    InstalmentStatusChangedEvent:
      description: |
        An Event describing the status change of an instalment. These events are only sent for instalment bills. The approved amount is only provided for the status APPROVED.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        properties:
          approvedAmount:
            $ref: '#/components/schemas/ApprovalAmountWithCurrency'
          businessCaseId:
            maxLength: 39
            pattern: "BCID[0-9A-Z]{32}"
            type: string
            description: business case id
            example: BCID0FB909852BBC4D06AD8336AAE87D7FC9
          externalInstalmentId:
            maxLength: 36
            minLength: 1
            type: string
            description: external id of the instalment
            example: 298031-2999-ACX01
          externalPaymentByInstalmentsId:
            maxLength: 36
            minLength: 1
            type: string
            description: external id of the respective paymentByInstalment
            example: 298031-2999
          newStatus:
            type: string
            description: the new status of the instalment
            enum:
            - NWP_PENDING
            - OPEN
            - APPROVED
            - REJECTED
            - COMPLETED
    Ita:
      title: Ita
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        displayName:
          type: string
        logo:
          $ref: '#/components/schemas/Logo'
        website:
          type: string
    LocalizedData:
      title: LocalizedData
      type: object
      properties:
        defaultLanguage:
          type: string
        fre:
          $ref: '#/components/schemas/Fre'
        ger:
          $ref: '#/components/schemas/Ger'
        ita:
          $ref: '#/components/schemas/Ita'
    LocalizedSectorData:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 36
          minLength: 1
          type: string
          description: name of the sector
          example: Transport
    Logo:
      title: Logo
      type: object
      properties:
        assetId:
          type: string
        name:
          type: string
    PaymentByInstalments:
      title: PaymentByInstalments
      required:
      - instalments
      type: object
      properties:
        description:
          type: string
          description: Description of the instalment group.
        externalPaymentByInstalmentsId:
          type: string
          description: Unique reference of the instalment group. It is assigned by
            the invoice issuer and must be unique for the entire business case.
        instalments:
          type: array
          items:
            $ref: '#/components/schemas/Instalment'
        isTotalAmountHidden:
          type: boolean
          description: If `true` - then the total amount of the invoice is not permitted
            to be presented to the invoice recipient.
        isTotalPaymentOption:
          type: boolean
          description: If `true` - then the instalment of the instalment group is
            considered as the total instalment of the invoice i.e. the instalment
            with which the invoice issuer enables the total invoice amount to be paid
            all at once. isTotalPaymentOption can only be set to `true` in one instalment
            group. It is recommended to provide a total instalment option.
      description: "An instalment group can be chosen for payment. Following, all\
        \ single instalments, that are included in the instalment group can be approved\
        \ one by one. The maximum allowed number of instalment groups is 99. The instalment\
        \ group that is marked as the total instalment (isTotalPaymentOption = `true`)\
        \ is initially shown to the invoice recipient as the chosen option. If there\
        \ is no total instalment option (isTotalPaymentOption = `false`) the invoice\
        \ recipient sees automatically the first instalment group as chosen."
    PaymentInformation:
      title: PaymentInformation
      required:
      - accountAndReference
      - amount
      - dueDate
      type: object
      properties:
        accountAndReference:
          $ref: '#/components/schemas/AccountAndReference'
        amount:
          $ref: '#/components/schemas/TotalAmount'
        dueDate:
          type: string
          description: "At time of submission, cannot be set to more than 3 years\
            \ in the future (1095 days). At time of submission, cannot be older than\
            \ 90 days."
          example: 202"2-05-05
        payableAmountCanBeModified:
          type: boolean
          description: |
            If `true`, then the provided invoice amount is permitted to be altered.
            If the invoice amount is not provided, the value must be set to `true`.
            If no value is provided, the eBill infrastructure will automatically set to `true`.
            
            For donation inquiries:
            - This field must be set to `true` when proposedDonationAmounts is specified
            - This allows the donation inquiry recipient to select one of the proposed amounts or enter a free amount
          example: true
    PostalAddress:
      title: PostalAddress
      required:
      - buildingNumber
      - city
      - countryCode
      - postalCode
      - street
      type: object
      properties:
        buildingNumber:
          type: string
          description: buliding number
          example: "01"
        city:
          type: string
          description: city
          example: Adliswil
        countryCode:
          type: string
          description: countryCode
          example: CH
        postalCode:
          type: string
          description: postalCode
          example: "8134"
        street:
          type: string
          description: street name
          example: Soodmattenstrasse
    Problem:
      type: object
      properties:
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the problem.
          example: |
            The submitted request contains invalid or missing data which can not be processed.
        fieldErrors:
          type: array
          items:
            type: object
            properties:
              fieldName:
                type: string
                description: the name of the field with the error
                example: localizedData.ger.address.city
              message:
                type: string
                description: the message describing the error
                example: size must be between 1 and 35
              rejectedValue:
                type: string
                description: the provided value which was rejected if available
                example: Very Long Invalid City Name Which Is Rejected
        instance:
          type: string
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
          example: |
            /swp/v1/biller/errors/BCID0090000001/provided-X-CORRELATION-ID
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: integer
          description: |
            The HTTP status code generated by the origin server for this occurrence of the problem.
          format: int32
          example: 400
        technicalReason:
          type: string
          description: |
            The Technical Description/Reason for engineers might contain addition system information on the problem.
          example: Some field validations failed
        title:
          type: string
          description: "A short, human readable summary of the problem type."
          example: Payload has missing or invalid values
        type:
          type: string
          description: |
            An absolute URI that identifies the problem type.
            We may provide human-readable documentation for the problem type in the future, when the URI is dereferenced.
            For now consult the Software Partner API documentation for further information.
            The URI consists of the /problems endpoint and the documented problem type, see example.
          format: uri
          example: /problems/REQUEST_BODY_VALIDATION_FAILED
          default: about:blank
    RecipientSubscriptionEvent:
      title: RecipientSubscriptionEvent
      required:
      - eventId
      type: object
      properties:
        accountNumber:
          type: string
        billRecipient:
          $ref: '#/components/schemas/BillRecipient'
        billRecipientSubscriptionFormFields:
          type: array
          items:
            $ref: '#/components/schemas/BillRecipientSubscriptionFormField'
        billerId:
          type: string
        eventId:
          type: string
          description: 'event id '
          example: "41010560425610180"
        newStatus:
          type: string
        referenceStructured:
          type: string
        timestamp:
          type: string
    ReferenceBill:
      title: ReferenceBill
      type: object
      properties:
        referenceNumber:
          type: string
          description: "Reference number/invoice number of the referenced business\
            \ case. If the referenced invoice is found, it will be substituted with\
            \ the new credit note, notification, or invoice. In case of a reminder,\
            \ the referenced invoice will not be substituted; at time of approval,\
            \ the invoice recipient decides whether to pay the original invoice or\
            \ the reminder. If the referenced invoice is not found, a new business\
            \ case is created."
          example: BCID8FC1AE666B65449EAFEA65AD64731234
    Sector:
      type: object
      properties:
        id:
          maxLength: 14
          pattern: "SCID[0-9]{10}"
          type: string
          description: A unique id for this sector.
          example: SCID0000000000
        localizedData:
          type: object
          properties:
            eng:
              $ref: '#/components/schemas/LocalizedSectorData'
            fre:
              $ref: '#/components/schemas/LocalizedSectorData'
            ger:
              $ref: '#/components/schemas/LocalizedSectorData'
            ita:
              $ref: '#/components/schemas/LocalizedSectorData'
    SinglePayment:
      title: SinglePayment
      required:
      - paymentInformation
      type: object
      properties:
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
        paymentMode:
          type: string
          description: "eBill payment or eBill Direct Debit payment. eBill payment (EBILL): approval by the recipient required. eBill Direct Debit payment (EBILL_DEBIT): automatically collected on the recipient side. Requires a defined eBill Direct Debit submission approval."
          enum:
            - EBILL
            - EBILL_DEBIT
    TotalAmount:
      title: TotalAmount
      required:
      - currencyCode
      - value
      type: object
      properties:
        currencyCode:
          type: string
          description: "Currency code according to ISO 4217 When using QR-IBAN or\
            \ ESR-participant number, only CHF and EUR are allowed."
          example: CHF
        value:
          type: string
          description: |
            Maximum amount `99'999'999.99` for invoices, instalment invoices,
            reminders and credit notes. Minimal amount `-99'999'999.99` to maximum
            amount `99'999'999.99` for advice notes. Amount must be greater than
            `0` for invoices, instalment invoices and reminders. Amount must be
            ≥ `0` for credit notes. If an IBAN or QR-IBAN is used for invoices or
            instalments of an instalment invoice, the amount does not have to be
            supplied (compatibility QR invoice).
            
            For donation inquiries:
            - The value must be an empty string ("") when proposedDonationAmounts is specified
            - The value must be an empty string ("") in the paymentInformation.amount when proposedDonationAmounts is specified
            - The payableAmountCanBeModified must be set to true in paymentInformation
          example: "10"
    WorkFlow:
      title: WorkFlow
      required:
      - amountPaid
      - netAmount
      - vatEnterpriseIdentificationNumbers
      - vatRates
      type: object
      properties:
        amountPaid:
          $ref: '#/components/schemas/TotalAmount'
        caseReferenceForBillRecipient:
          type: string
          description: Association reference to be used by the invoice recipient to
            allocate the business case in his bookkeeping
        deliveryDateEnd:
          type: string
          description: Delivery date or end date of the service provision
          example: YYYY-MM-DD
        deliveryDateStart:
          type: string
          description: "Start date of the service provision, in case it is different\
            \ than deliveryDateEnd"
          example: YYYY-MM-DD
        netAmount:
          $ref: '#/components/schemas/TotalAmount'
        vatEnterpriseIdentificationNumbers:
          type: array
          description: VAT-UID of the invoice issuer. Presentation without punctuation
            (e.g. CHE123456789MWST).
          example:
          - str1
          - str2
          - str3
          items:
            type: string
        vatRates:
          type: array
          description: VAT information per VAT rate
          items:
            type: string
    DonationPurpose:
      type: object
      required:
        - externalDonationPurposeId
        - label
      properties:
        externalDonationPurposeId:
          type: string
          maxLength: 36
          minLength: 1
          description: 'Technical id to uniquely identify a donation purpose.'
        label:
          type: string
          maxLength: 35
          minLength: 1
          description: 'Used to present the donation purpose to the donation inquiry recipient.'

    DonationPurposes:
      type: object
      required:
        - donationPurpose
      properties:
        donationPurpose:
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/DonationPurpose'

    ProposedDonationAmounts:
      type: object
      required:
        - proposedDonationAmount
      properties:
        proposedDonationAmount:
          type: array
          minItems: 2
          maxItems: 5
          items:
            $ref: '#/components/schemas/TotalAmount'
      description: 'The donation inquiry recipient can select one of the proposed donation amounts or enter a free amount.'
  responses:
    BadRequest:
      description: bad request
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Problem'
    Forbidden:
      description: forbidden
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Problem'
    NotFound:
      description: the specified resource was not found
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Problem'
    Unauthorized:
      description: unauthorized
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Problem'
  parameters:
    header_authorization:
      name: Authorization
      in: header
      description: |
        Access-Token with the prefix "Bearer".
      required: true
      schema:
        type: string
    header_xBusinessCaseFormat:
      name: X-BCFORMAT
      in: header
      description: Format of the business case.
      schema:
        type: string
        enum:
        - zugferd.EN16931
        - zugferd.EXTENDED
        - zugferd.BasicWL
        - fscmxml
        - yellowbill
        - qrbill
    header_xBusinessCaseFunction:
      name: X-BCFUNCTION
      in: header
      description: Function of the business case.
      schema:
        type: string
        enum:
        - bill
        - creditnote
        - advice
        - reminder
    header_xCorrelationId:
      name: X-CORRELATION-ID
      in: header
      description: |
        ID which will unambiguously identify this request to the API.
        **Minimal length**: '1'
        **Maximal length**: '36'
      required: true
      schema:
        maxLength: 36
        minLength: 1
        type: string
    header_xFilename:
      name: X-FILENAME
      in: header
      description: |
        Filename for the business case PDF. This is only used for analytical purposes and support. The filename is not visible for the bill recipient.
        **Minimal length**: '1'
        **Maximal length**: '99'
      schema:
        maxLength: 99
        minLength: 1
        type: string
    query_billerPid:
      name: billerPid
      in: query
      description: |
        biller PID
        **Maximal length**: '17'
        **Example**: '"41NN00BBBBBBBBBPP"'
        **Pattern**: '41[0-9]{15}'
      required: true
      schema:
        maxLength: 17
        pattern: "41[0-9]{15}"
        type: string
    query_businessCaseId:
      name: businessCaseId
      in: query
      description: |
        business case id
        **Maximal length**: '39'
        **Example**: '"BCID0FB909852BBC4D06AD8336AAE87D7FC9"'
        **Pattern**: 'BCID[0-9A-Z]{32}'
      required: true
      schema:
        maxLength: 39
        pattern: "BCID[0-9A-Z]{32}"
        type: string
    query_lastEventId:
      name: lastEventId
      in: query
      description: |
        Id of the last received event. If omitted, the result starts with the oldest available event.
        **Example**: '"EVID82A65938766547EBBBA39BA6F7B07F24"'
        **Maximal length**: '39'
        **Pattern**: '"EVID[0-9A-Z]{32}"'
      schema:
        maxLength: 39
        pattern: "EVID[0-9A-Z]{32}"
        type: string
    query_limitEvents:
      name: limit
      in: query
      description: |
        Maximum number of events one wants to receive (technical maximum is 1000, no more will be returned at once and you have to fetch again to check if there are more)
      schema:
        maximum: 1000
        type: integer
        default: 100
x-original-swagger-version: "2.0"
